@startuml traceback_stacktraceback_info

title Activity Diagram of the Property StackTraceback.Info

start

:Instantiate <b>Result</b> as an empty string;

while (for each tuple stored in the instance attribute <b>_lstTraceback</b> list)
    :extract <b>Path</b>, <b>Name</b> and <b>QualifiedName</b> names of the caller, <b>LineNumber</b>\nand <b>LineIndex</b> indexes and <b>CodeLines</b> list by their position;
    
    if (<b>CodeLines</b> list is not empty, i.e. None?) then (Yes)
        :get the length of the string representation of the maximum line number (<b>LineNumber + LineIndex</b>);
        
        if (<b>Name</b> is '<module>'?) then (Yes)
            :append string 'In module {QualifiedName}' to the <b>Result</b> string;
        else (No)
            :append string 'Caller {QualifiedName}()' to the <b>Result</b> string;
        endif

        :append string 'Line {LineNumber} in {Path}' to the <b>Result</b> string;

        while (for each <b>Line</b> in <b>CodeLines</b>)
            :form the string prefix with the actual line number left zero padded to the maximum length;
            
            if (current line is the call point?) then (Yes)
                :add '>' before the line number prefix and a whitespace after;
            else (No)
                :wrap line number prefix with whitespaces on both sides;
            endif
            
            :combine line number prefix with the actual source code line <b>Line</b> ;
            
            if (resulting string length exceed the desired console width?) then (True)
                :truncate the string to the (console width - 3), and add '...' at the end;
            endif
            
            :add the formed annotated source code line to the sting buffer;
        end while
    endif
end while

:return the <b>Result</b> string>

stop

@enduml